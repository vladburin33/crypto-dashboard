<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Donchian Channel - Binance Futures</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono&display=swap" rel="stylesheet">
    <style>body,html{height:100%;margin:0;font-family:sans-serif}.container{display:flex;width:100%;height:100%}#left-panel{width:25%;padding:20px;box-sizing:border-box;border-right:1px solid #ccc;background-color:#f9f9f9;display:flex;flex-direction:column;flex-shrink:0}#legend-panel{flex:1;overflow-y:auto;padding-bottom:10px;border-bottom:1px solid #eee;font-family:sans-serif}#log-panel{flex:1;overflow-y:auto;padding-top:10px;font-family:sans-serif}#result-panel{width:75%;padding:20px;box-sizing:border-box;overflow:hidden;background-color:#fff;display:flex;flex-direction:column}h2{margin-top:0}table{width:100%;border-collapse:collapse;font-family:'Roboto Mono','Lucida Console',Monaco,monospace;table-layout:fixed}th,td{border:1px solid #ddd;padding:8px;text-align:left;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}th{background-color:#f2f2f2;cursor:pointer;position:relative;font-family:sans-serif}th:hover{background-color:#e0e0e0}td:nth-child(1){width:60px;text-align:center}td:nth-child(2){width:120px}td:nth-child(3){text-align:right;width:100px}td:nth-child(4){text-align:left;width:140px}td:nth-child(5){text-align:center;width:60px}td:nth-child(6){text-align:left;width:100px}td:nth-child(7),td:nth-child(8),td:nth-child(9){text-align:center;width:100px}td:nth-child(10){text-align:center;width:80px}.pair-code{font-weight:700}.donchian-values div,.signal-values div,.spread-values div,.term-values div,.rsi-values div{line-height:1.2}.signal-values{text-align:left}#log-entries{list-style-type:none;padding-left:0;margin-top:0}#log-entries li{padding:5px 0;border-bottom:1px dashed #eee;font-size:.9em}#log-entries li:last-child{border-bottom:none}.pair-link{cursor:pointer;color:blue;text-decoration:underline}.pair-external-link{color:inherit;text-decoration:none}#legend-panel ul{list-style-type:none;padding:0;margin:0}#legend-panel li{margin-bottom:5px;font-size:.9em}#legend-panel strong{display:inline-block;width:120px}.instructions{font-size:.85em;margin-top:10px;padding:5px 0;border-top:1px solid #eee}.sort-arrow{display:inline-block;width:0;height:0;margin-left:5px;vertical-align:middle;border-left:4px solid transparent;border-right:4px solid transparent}.sort-arrow.asc{border-bottom:6px solid #333}.sort-arrow.desc{border-top:6px solid #333}#controls{margin-bottom:10px;display:flex;align-items:center;flex-wrap:wrap;gap:15px}#result-table-wrapper{flex:1;overflow-x:auto;overflow-y:auto}.hidden-col{display:none}</style>
</head>
<body>
    <div class="container">
        <div id="left-panel">
            <div id="legend-panel">
                <h2>Легенда</h2>
                <ul>
                    <li><strong>Rank:</strong> Ранг по капитализации (источник CoinGecko.com).</li>
                    <li><strong>Пара:</strong> Торговая пара с Binance Futures.</li>
                    <li><strong>Цена:</strong> Последняя торговая цена.</li>
                    <li><strong>Donchian:</strong> Высшая (H) и Низшая (L) цены за 50 периодов.</li>
                    <li><strong>Trend:</strong> Направление тренда (-1, 0, +1).</li>
                    <li><strong>Signal:</strong> Цена сигнала пробоя канала.</li>
                    <li><strong>Spread:</strong> Разница цены и сигнала (%) и очки.</li>
                    <li><strong>Term:</strong> Свечей с момента сигнала и очки.</li>
                    <li><strong>RSI:</strong> Индекс относительной силы и очки.</li>
                    <li><strong>Score:</strong> Сумма очков.</li>
                </ul>
                <p class="instructions">Нажмите на символ, чтобы скопировать его в буфер обмена. Нажмите на заголовок столбца, чтобы отсортировать таблицу.</p>
            </div>
            <div id="log-panel">
                <h2>Лог</h2>
                <ul id="log-entries"></ul>
            </div>
        </div>
        <div id="result-panel">
            <div id="controls">
                <label for="kline-interval-select">Таймфрейм:</label>
                <select id="kline-interval-select">
                    <option value="1m">1m</option><option value="3m">3m</option><option value="5m">5m</option><option value="15m">15m</option><option value="30m">30m</option><option value="1h">1h</option><option value="2h">2h</option><option value="4h">4h</option><option value="6h">6h</option><option value="8h">8h</option><option value="12h">12h</option><option value="1d">1d</option><option value="3d">3d</option><option value="1w">1w</option><option value="1M">1M</option>
                </select>
                <label><input type="checkbox" id="toggleSpread" checked> Spread</label>
                <label><input type="checkbox" id="toggleTerm" checked> Term</label>
                <label><input type="checkbox" id="toggleRSI" checked> RSI</label>
            </div>
            <div id="result-table-wrapper">
                <table id="result-table">
                    <thead>
                        <tr>
                            <th>Rank<span class="sort-arrow"></span></th>
                            <th>Пара<span class="sort-arrow"></span></th>
                            <th>Цена<span class="sort-arrow"></span></th>
                            <th>Donchian<span class="sort-arrow"></span></th>
                            <th>Trend<span class="sort-arrow"></span></th>
                            <th>Signal<span class="sort-arrow"></span></th>
                            <th id="header-spread">Spread<span class="sort-arrow"></span></th>
                            <th id="header-term">Term<span class="sort-arrow"></span></th>
                            <th id="header-rsi">RSI<span class="sort-arrow"></span></th>
                            <th>Score<span class="sort-arrow"></span></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
    <script>
        const logEl = document.getElementById('log-entries'), tableBody = document.getElementById('result-table').tBodies[0], tableHead = document.getElementById('result-table').tHead, toggleSpread = document.getElementById('toggleSpread'), toggleTerm = document.getElementById('toggleTerm'), toggleRSI = document.getElementById('toggleRSI'), klineSelect = document.getElementById('kline-interval-select');
        const SYMBOL_LIMIT=1e3,EXCLUDED_PAIRS=["USDCUSDT","TUSDUSDT","FDUSDUSDT","AEURUSDT","EURUSDT","USDTBIDR","USDTBRL","USDTDAI","USDTTRY","USDTUAH","USDTZAR"],D_PER=50,R_PER=14,KLINE_FETCH_LIMIT=300,MIN_KLINE_COUNT=100;
        let sortColIdx=9,sortDir='desc',klineInt='15m',currentStates={},allData=[];
        const F_BASE_URL='https://fapi.binance.com/fapi/v1/',B_TRADE_URL='https://www.binance.com/ru/futures/',COL_MAP={rank:0,pair:1,price:2,donchian:3,trend:4,signal:5,spread:6,term:7,rsi:8,score:9};
        function addLog(msg,isErr=false){const entry=document.createElement('li'),ts=(new Date).toLocaleTimeString('en-US',{hour12:!1});entry.textContent=`[${ts}] ${msg}`;isErr&&(entry.style.color='red');logEl.append(entry);logEl.children.length>50&&logEl.removeChild(logEl.firstElementChild)}
        async function copyToClip(text){try{await navigator.clipboard.writeText(text+".P");addLog(`Скопировано '${text}.P' в буфер обмена.`)}catch(err){console.error('Не удалось скопировать текст: ',err);addLog(`Ошибка при копировании '${text}.P': ${err.message}`,!0)}}
        async function fetchRanks(){addLog("Запрос рангов с CoinGecko...");try{const page1Promise=fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1');const page2Promise=fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=2');const responses=await Promise.all([page1Promise,page2Promise]);for(const res of responses){if(!res.ok)throw new Error(`HTTP ${res.status}`)}
        const data=await Promise.all(responses.map(res=>res.json()));const allCoins=data.flat();const ranksMap=new Map;allCoins.forEach(coin=>{if(coin.symbol)ranksMap.set(coin.symbol.toUpperCase(),coin.market_cap_rank)});addLog(`Ранги по капитализации получены для ${ranksMap.size} монет.`);return ranksMap}catch(err){addLog(`Ошибка при получении рангов: ${err.message}`,!0);return new Map}}
        function calcDonchian(klines,period){if(klines.length<period)return{hpc:null,lpc:null};const relKlines=klines.slice(-period);let h=-Infinity,l=Infinity;relKlines.forEach(k=>{const high=parseFloat(k[2]),low=parseFloat(k[3]);high>h&&(h=high);low<l&&(l=low)});return{hpc:h,lpc:l}}
        function calcRSI(klines,period){if(klines.length<period+1)return null;const closePrices=klines.map(k=>parseFloat(k[4]));let gains=[],losses=[];for(let i=1;i<closePrices.length;i++){const diff=closePrices[i]-closePrices[i-1];if(diff>0){gains.push(diff);losses.push(0)}else{gains.push(0);losses.push(Math.abs(diff))}}
        let avgGain=gains.slice(0,period).reduce((s,v)=>s+v,0)/period,avgLoss=losses.slice(0,period).reduce((s,v)=>s+v,0)/period;if(avgLoss===0)return 100;let rs=avgGain/avgLoss,rsi=100-(100/(1+rs));for(let i=period;i<gains.length;i++){avgGain=((avgGain*(period-1))+gains[i])/period;avgLoss=((avgLoss*(period-1))+losses[i])/period;if(avgLoss===0)rsi=100;else{rs=avgGain/avgLoss;rsi=100-(100/(1+rs))}}
        return rsi!==null&&!isNaN(rsi)?parseFloat(rsi.toFixed(2)):null}
        function calcScores(data){const total=data.length;if(total===0)return;const sData=[...data].map(i=>({symbol:i.symbol,absSpread:i.rawSpread!==null?Math.abs(i.rawSpread):-Infinity})).sort((a,b)=>b.absSpread-a.absSpread||a.symbol.localeCompare(b.symbol));for(let i=0;i<sData.length;i++){const item=data.find(it=>it.symbol===sData[i].symbol);if(item)item.spreadScore=sData[i].absSpread===-Infinity?0:Math.max(1,total-i)}
        const tData=[...data].map(i=>({symbol:i.symbol,termValue:i.term!==''?parseInt(i.term):-Infinity})).sort((a,b)=>b.termValue-a.termValue||a.symbol.localeCompare(b.symbol));for(let i=0;i<tData.length;i++){const item=data.find(it=>it.symbol===tData[i].symbol);if(item)item.termScore=tData[i].termValue===-Infinity?0:Math.max(1,total-i)}
        const rData=[...data].map(i=>({symbol:i.symbol,absDiffFrom50:i.rsi!==null?Math.abs(i.rsi-50):-Infinity})).sort((a,b)=>b.absDiffFrom50-a.absDiffFrom50||a.symbol.localeCompare(b.symbol));for(let i=0;i<rData.length;i++){const item=data.find(it=>it.symbol===rData[i].symbol);if(item)item.rsiScore=rData[i].absDiffFrom50===-Infinity?0:Math.max(1,total-i)}
        data.forEach(i=>{let score=0;toggleSpread.checked&&(score+=i.spreadScore?parseInt(i.spreadScore):0);toggleTerm.checked&&(score+=i.termScore?parseInt(i.termScore):0);toggleRSI.checked&&(score+=i.rsiScore?parseInt(i.rsiScore):0);i.totalScore=score})}
        function renderTable(data){tableBody.innerHTML='';if(data.length===0){tableBody.innerHTML=`<tr><td colspan="10" style="text-align: center;">Нет данных для отображения.</td></tr>`;return}
        data.forEach(i=>{const row=tableBody.insertRow();row.id=`row-${i.symbol}`;const rankCell=row.insertCell();rankCell.textContent=i.rank||'> 500';const pCell=row.insertCell();let base=i.symbol.replace('USDT','');base.startsWith('10')&&(base=base.replace(/^10+/,''));const pCode=document.createElement('a');pCode.className='pair-code pair-external-link';pCode.textContent=base;pCode.href=`${B_TRADE_URL}${i.symbol}`;pCode.target='_blank';pCode.title=`Открыть страницу ${i.symbol} на Binance`;pCell.append(pCode,document.createElement('br'));const pLink=document.createElement('span');pLink.className='pair-link';pLink.textContent=i.symbol;pLink.title=`Скопировать ${i.symbol}`;pLink.addEventListener('click',()=>copyToClip(i.symbol));pCell.appendChild(pLink);row.insertCell().textContent=typeof i.lastPrice==='number'?i.lastPrice.toFixed(8):'';const dCell=row.insertCell();dCell.className='donchian-values';dCell.innerHTML=`<div>H = ${i.hpc}</div><div>L = ${i.lpc}</div>`;row.insertCell().textContent=i.trend;const sCell=row.insertCell();sCell.className='signal-values';if(i.trend==='+1'&&i.hSignal!=='')sCell.textContent=`H = ${i.hSignal}`;else if(i.trend==='-1'&&i.lSignal!=='')sCell.textContent=`L = ${i.lSignal}`;else sCell.textContent='';const spCell=row.insertCell();spCell.className='spread-values';spCell.classList.toggle('hidden-col',!toggleSpread.checked);const spVal=document.createElement('div'),spScore=document.createElement('div');spVal.textContent=i.spread.startsWith('-')||i.spread===''?i.spread:`+${i.spread}`;spScore.textContent=`Score = ${i.spreadScore!==void 0?i.spreadScore:''}`;spCell.append(spVal,spScore);const tCell=row.insertCell();tCell.className='term-values';tCell.classList.toggle('hidden-col',!toggleTerm.checked);const tVal=document.createElement('div'),tScore=document.createElement('div');tVal.textContent=i.term;tScore.textContent=`Score = ${i.termScore!==void 0?i.termScore:''}`;tCell.append(tVal,tScore);const rCell=row.insertCell();rCell.className='rsi-values';rCell.classList.toggle('hidden-col',!toggleRSI.checked);const rVal=document.createElement('div'),rScore=document.createElement('div');rVal.textContent=i.rsi!==null?`${i.rsi}%`:'';rScore.textContent=`Score = ${i.rsiScore!==void 0?i.rsiScore:''}`;rCell.append(rVal,rScore);row.insertCell().textContent=i.totalScore!==void 0?i.totalScore:''})}
        async function fetchPairs(){logEl.innerHTML='';tableBody.innerHTML=`<tr><td colspan="10" style="text-align: center;">Загрузка данных...</td></tr>`;const ranksMap=await fetchRanks();addLog("Запрос списка торговых пар...");const url=F_BASE_URL+'exchangeInfo';try{const response=await fetch(url);if(!response.ok){const errTxt=await response.text();throw new Error(`Ошибка HTTP! ${response.status}. ${errTxt}`)}
        const data=await response.json(),pairs=data.symbols.filter(s=>s.quoteAsset==="USDT"&&s.contractType==="PERPETUAL"&&s.status==="TRADING"&&!EXCLUDED_PAIRS.includes(s.symbol)).map(s=>s.symbol).sort();addLog(`Получено ${pairs.length} пар.`);if(pairs.length===0){addLog("Нет пар для обработки.",!0);tableBody.innerHTML='<tr><td colspan="10" style="text-align: center;">Нет пар для обработки.</td></tr>';return}
        allData=[];const pairsToFetch=pairs.slice(0,SYMBOL_LIMIT),prices=await fetchAllPrices();addLog(`Обработка ${klineInt} KLines...`);const promises=pairsToFetch.map(p=>fetchKline(p,klineInt,KLINE_FETCH_LIMIT)),klineResults=await Promise.allSettled(promises);let processedCount=0;for(let i=0;i<pairsToFetch.length;i++){const p=pairsToFetch[i],res=klineResults[i];if(res.status!=='fulfilled'||!res.value.klines||res.value.klines.length<MIN_KLINE_COUNT)continue;const klines=res.value.klines;let baseAsset=p.replace('USDT','');baseAsset.startsWith('10')&&(baseAsset=baseAsset.replace(/^10+/,''));const rank=ranksMap.get(baseAsset)||null;let hpc='',lpc='',trend=0,hSig='',lSig='',spread='',term='',rsi=null,rawSpread=null,lastPrice=prices.has(p)?prices.get(p):null;if(!currentStates[p])currentStates[p]={trend:0,hSignalPrice:'',lSignalPrice:'',lastSignalKlineIndex:-1};let histTrend=currentStates[p].trend,histHSig=currentStates[p].hSignalPrice,histLSig=currentStates[p].lSignalPrice,lastSigIdx=currentStates[p].lastSignalKlineIndex;for(let j=D_PER;j<klines.length;j++){const prevKlines=klines.slice(j-D_PER,j),dPrev=calcDonchian(prevKlines,D_PER);if(dPrev.hpc!==null&&dPrev.lpc!==null){const curKline=klines[j],curHigh=parseFloat(curKline[2]),curLow=parseFloat(curKline[3]);if(curHigh>=dPrev.hpc){if(histTrend!=='+1'){histHSig=dPrev.hpc.toFixed(8);histLSig='';lastSigIdx=j}
        histTrend='+1'}else if(curLow<=dPrev.lpc){if(histTrend!=='-1'){histLSig=dPrev.lpc.toFixed(8);histHSig='';lastSigIdx=j}
        histTrend='-1'}}else{histTrend=0;histHSig='';histLSig='';lastSigIdx=-1}}
        trend=histTrend;hSig=histHSig;lSig=histLSig;const dKlines=klines.slice(klines.length-D_PER),dDisp=calcDonchian(dKlines,D_PER);hpc=dDisp.hpc!==null?dDisp.hpc.toFixed(8):'';lpc=dDisp.lpc!==null?dDisp.lpc.toFixed(8):'';lastSigIdx!==-1&&(term=(klines.length-1)-lastSigIdx);rsi=calcRSI(klines,R_PER);if(lastPrice!==null){let sigVal=null;if(trend==='+1'&&hSig!=='')sigVal=parseFloat(hSig);else if(trend==='-1'&&lSig!=='')sigVal=parseFloat(lSig);sigVal!==null&&sigVal!==0&&(rawSpread=((lastPrice-sigVal)/sigVal)*100,spread=rawSpread.toFixed(1)+'%')}
        currentStates[p].trend=trend;currentStates[p].hSignalPrice=hSig;currentStates[p].lSignalPrice=lSig;currentStates[p].lastSignalKlineIndex=lastSigIdx;allData.push({rank,symbol:p,lastPrice,hpc,lpc,trend,hSignal:hSig,lSignal:lSig,spread,term,rawSpread,rsi,spreadScore:0,termScore:0,rsiScore:0,totalScore:0});processedCount++}
        addLog(`Обработано ${processedCount} пар.`);applyColVisibility();addLog("Обновление завершено.")}catch(err){console.error("Ошибка в fetchPairs:",err);addLog(`Критическая ошибка: ${err.message}`,!0);tableBody.innerHTML=`<tr><td colspan="10" style="text-align: center;">Ошибка: ${err.message}</td></tr>`}}
        async function fetchAllPrices(){addLog("Запрос цен...");const url=F_BASE_URL+'ticker/price';try{const res=await fetch(url);if(!res.ok){const errTxt=await res.text();throw new Error(`Ошибка HTTP! ${res.status}. ${errTxt}`)}
        const data=await res.json(),priceMap=new Map;data.forEach(i=>{priceMap.set(i.symbol,parseFloat(i.price))});addLog(`Цены получены для ${priceMap.size} пар.`);return priceMap}catch(err){console.error("Ошибка при получении цен:",err);addLog(`Ошибка при получении цен: ${err.message}`,!0);return new Map}}
        async function fetchKline(symbol,interval,limit){const url=`${F_BASE_URL}klines?symbol=${symbol}&interval=${interval}&limit=${limit}`;try{const res=await fetch(url);if(!res.ok){const errTxt=await res.text();throw new Error(`Ошибка HTTP для ${symbol}! ${res.status}. ${errTxt}`)}
        const data=await res.json();return data&&data.length>0?{klines:data}:{klines:[]}}catch(err){console.error(`Ошибка KLines для ${symbol}:`,err);addLog(`Ошибка KLines для ${symbol}: ${err.message}`,!0);return{klines:[]}}}
        function handleHeaderClick(idx){const visHdrs=Array.from(tableHead.querySelectorAll('th:not(.hidden-col)'));if(!visHdrs[idx])return;const colId=visHdrs[idx].textContent.trim().toLowerCase().split(' ')[0];const key=Object.keys(COL_MAP).find(k=>k===colId);if(key===void 0)return;const origIdx=COL_MAP[key];if(origIdx===sortColIdx)sortDir=sortDir==='asc'?'desc':'asc';else{sortColIdx=origIdx;sortDir=(origIdx===COL_MAP.rank||origIdx===COL_MAP.pair||origIdx===COL_MAP.trend)?'asc':'desc'}
        sortAndRender()}
        function sortData(data,col,dir){const S=(a,b)=>{if(a===null||a===void 0)return 1;if(b===null||b===void 0)return-1;return a<b?-1:a>b?1:0};data.sort((a,b)=>{let comp=0;switch(col){case COL_MAP.rank:comp=S(a.rank,b.rank);break;case COL_MAP.pair:comp=a.symbol.localeCompare(b.symbol);break;case COL_MAP.price:comp=S(a.lastPrice,b.lastPrice);break;case COL_MAP.donchian:comp=S(a.hpc,b.hpc)||S(a.lpc,b.lpc);break;case COL_MAP.trend:comp=S(a.trend,b.trend);break;case COL_MAP.signal:const sigA=a.trend==='+1'?a.hSignal:a.lSignal,sigB=b.trend==='+1'?b.hSignal:b.lSignal;comp=S(parseFloat(sigA),parseFloat(sigB));break;case COL_MAP.spread:comp=S(a.spreadScore,b.spreadScore);break;case COL_MAP.term:comp=S(a.termScore,b.termScore);break;case COL_MAP.rsi:comp=S(a.rsiScore,b.rsiScore);break;case COL_MAP.score:comp=S(a.totalScore,b.totalScore);break}
        return dir==='asc'?comp:-comp})}
        function sortAndRender(){sortData(allData,sortColIdx,sortDir);renderTable(allData);updateSortArrows()}
        function updateSortArrows(){document.querySelectorAll('#result-table thead th').forEach(header=>{const arrow=header.querySelector('.sort-arrow');if(!arrow)return;arrow.classList.remove('asc','desc');const colId=header.textContent.trim().toLowerCase().split(' ')[0];const key=Object.keys(COL_MAP).find(k=>k===colId);const origIdxForHdr=COL_MAP[key];if(origIdxForHdr===sortColIdx&&!header.classList.contains('hidden-col'))arrow.classList.add(sortDir)})}
        function applyColVisibility(){document.getElementById('header-spread').classList.toggle('hidden-col',!toggleSpread.checked);document.getElementById('header-term').classList.toggle('hidden-col',!toggleTerm.checked);document.getElementById('header-rsi').classList.toggle('hidden-col',!toggleRSI.checked);calcScores(allData);sortAndRender();saveStates()}
        function saveStates(){const age=31536e3;document.cookie=`toggleSpread=${toggleSpread.checked};path=/;max-age=${age}`;document.cookie=`toggleTerm=${toggleTerm.checked};path=/;max-age=${age}`;document.cookie=`toggleRSI=${toggleRSI.checked};path=/;max-age=${age}`;document.cookie=`klineInterval=${klineSelect.value};path=/;max-age=${age}`}
        function loadStates(){document.cookie.split(';').forEach(c=>{const p=c.trim().split('=');if(p[0]==='toggleSpread')toggleSpread.checked=p[1]==='true';else if(p[0]==='toggleTerm')toggleTerm.checked=p[1]==='true';else if(p[0]==='toggleRSI')toggleRSI.checked=p[1]==='true';else if(p[0]==='klineInterval'){klineSelect.value=p[1];klineInt=p[1]}})}
        document.addEventListener('DOMContentLoaded',()=>{loadStates();tableHead.addEventListener('click',e=>{const header=e.target.closest('th');if(!header)return;const visHdrs=Array.from(header.parentElement.children).filter(th=>!th.classList.contains('hidden-col')),idx=visHdrs.indexOf(header);idx>-1&&handleHeaderClick(idx)});document.querySelectorAll('#result-table thead th').forEach(h=>{if(!h.querySelector('.sort-arrow')){const a=document.createElement('span');a.className='sort-arrow';h.appendChild(a)}});toggleSpread.addEventListener('change',applyColVisibility);toggleTerm.addEventListener('change',applyColVisibility);toggleRSI.addEventListener('change',applyColVisibility);klineSelect.addEventListener('change',()=>{klineInt=klineSelect.value;saveStates();fetchPairs()});fetchPairs()});
    </script>
</body>
</html>